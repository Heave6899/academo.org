var demo = new Demo({
	ui: {
        preset: {
            title: "Presets",
            value: 'glider',
            values: [
                ['Select a preset', 0],
                ['Glider', 'glider'],
                ['Pulsar', 'pulsar'], 
                ['Spaceship', 'spaceship'],
                ['Circle of Fire', 'circleOfFire'],
                ['Quadpole', 'quadpole']
            ]
        },
        animate: {
            title: "Animate",
            value: false
        },
        step: {
            title: "Advance one step",
            type: "button"
        },
        clear: {
            title: "Clear Screen",
            type: "button"
        }
	},



    init: function(){

        this.width = 20;
        this.height = 20;
        this.grid = [];
        this.animateCounter = 0;
        this.animateID;
        this.animateFPS = 5;
        this.presets = {
            glider: [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],
            pulsar: [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,1,0,0,1,1,0,1,1,0,0,1,1,1,0,0,0],[0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0],[0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0],[0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0],[0,0,1,1,1,0,0,1,1,0,1,1,0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],
            spaceship: [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],
            circleOfFire: [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],
            quadpole: [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]
        }


		$("#demo").append("<table class='conway-canvas'></table>");

		for (var i = 0 ; i < this.height ; i++){
            this.grid.push([]);
			$(".conway-canvas").append("<tr class='row"+i+"'></tr>")
			for (j = 0 ; j < this.width ; j++){
                this.grid[i].push(0);
				$(".row"+i).append("<td class='cell' data-y='" + i + "' data-x='" + j + "'></td>");
			}
		}

        // console.log(grid);

        $(".cell").click(function(){
            var cell = {
                x:$(this).data("x"),
                y:$(this).data("y")
            }
            if ($(this).hasClass("conway-on")){
                $(this).removeClass("conway-on");
                cell.state = 0;
            } else{
                $(this).addClass("conway-on");
                cell.state = 1;
            }
            this.grid[cell.y][cell.x] = cell.state; 
        }.bind(this))

        this.grid = this.presets[this.ui.preset.value];
        this.update();


	},

    animate: function(){
        this.animateID = window.requestAnimationFrame(this.animate.bind(this));
        this.animateCounter++;
        if (this.animateCounter % this.animateFPS == 0){
            this.animateCounter = 0;
            this.update();
        }
    },


	update: function(e){

        if (e == "animate" && this.ui.animate.value == true){
            //http://stackoverflow.com/questions/6065169/requestanimationframe-with-this-keyword
             // = window.requestAnimationFrame(this.animate.bind(this));
            this.animate();
        } else if (e == "animate" && this.ui.animate.value == false)  {
            cancelAnimationFrame(this.animateID);
            this.animateID = null;
        }

        if (e == 'preset' && this.ui.preset.value != 0){
            this.grid = this.presets[this.ui.preset.value];
        }

        if (e == "clear"){
            for (var i = 0 ; i < this.height ; i++){
                for (j = 0 ; j < this.width ; j++){
                    this.grid[i][j] = 0;
                }
            }
        }

        this.futureGrid = [];
        
        for (var i = 0 ; i < this.height ; i++){
            this.futureGrid.push([]);
            for (j = 0 ; j < this.width ; j++){
                neighbours = this.calcNeighbours(j, i)
                if (neighbours < 2){
                    this.futureGrid[i][j] = 0;
                } else if (this.grid[i][j] == 1 && (neighbours == 2 || neighbours == 3)){
                    this.futureGrid[i][j] = 1;
                } else if (this.grid[i][j] == 1 && neighbours > 3){
                    this.futureGrid[i][j] = 0;
                } else if (this.grid[i][j] == 0 && neighbours == 3){
                    this.futureGrid[i][j] = 1;
                } else {
                    this.futureGrid[i][j] = 0;
                }
            }
        }
        
        this.grid = this.futureGrid;
        for (var i = 0 ; i < this.height ; i++){
            for (j = 0 ; j < this.width ; j++){
                if (this.grid[i][j] == 1){
                    $(".cell[data-x='"+j+"'][data-y='"+i+"']").addClass("conway-on");
                } else {
                    $(".cell[data-x='"+j+"'][data-y='"+i+"']").removeClass("conway-on");
                }
            }
        }


	},

    calcNeighbours: function(x, y){
        
        var neighbours = $($(this.grid).get(y-1)).get(x-1) + $($(this.grid).get(y-1)).get(x) + $($(this.grid).get(y-1)).get((x+1)%this.width) + $($(this.grid).get(y)).get(x-1) + $($(this.grid).get(y)).get((x+1)%this.width) + $($(this.grid).get((y+1)%this.height)).get(x-1) + $($(this.grid).get((y+1)%this.height)).get(x) + $($(this.grid).get((y+1)%this.height)).get((x+1)%this.width);
        return neighbours;
    }

});